// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id                  String    @id @default(cuid())
  name                String?
  email               String?   @unique
  emailVerified       DateTime? @map("email_verified")
  password            String?
  image               String?
  phone               String?
  gender              String?
  genderOther         String?
  regionalCenter      String?
  regionalCenterOther String?
  admin               Boolean?  @default(false)
  createdAt           DateTime  @default(now()) @map("created_at")
  updatedAt           DateTime  @default(now()) @map("updated_at")
  accounts            Account[]
  sessions            Session[]
  Profile             Profile?
  Address             Address?

  @@map("users")
}

model Address {
  id        String   @id @default(cuid())
  userId    String   @unique @map("user_id")
  address1  String?
  address2  String?
  city      String?
  state     String?
  zip       String?
  type      String?  @default("home")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("addresses")
}

model Profile {
  id                  String   @id @default(cuid())
  userId              String   @unique @map("user_id")
  name                String?
  bio                 String?
  image               String?
  location            String?
  interests           String[] @default([])
  interestsOther      String?
  smoking             String?
  alcohol             String?
  hasPets             String?
  petsDescription     String?
  likesPets           String?
  roommateConflict    String?
  cleaning            String?
  sleepSchedule       String?
  likesParties        String?
  communicationMethod String?
  roommateGender      String[] @default([])
  roommateSharing     String?
  roommateGuests      String?
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @default(now()) @map("updated_at")
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profiles")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
